{"ast":null,"code":"var _jsxFileName = \"/home/misani/calculator/src/main/Calculator.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Calculator.css\";\nimport CalculatorConsts from \"../common/consts/calculator.consts\";\nimport Button from \"../components/Button/Button\";\nimport Display from \"../components/Display/Display\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  displayValue: \"0\",\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n};\nexport default class Calculator extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = { ...initialState\n    };\n  }\n\n  clear() {\n    this.setState({\n      initialState\n    });\n  }\n\n  setDigit(n) {\n    const clearDisplay = this.state.displayValue === \"0\" || this.state.clearDisplay;\n    if (n === \".\" && !clearDisplay && this.state.displayValue.includes(\".\")) return;\n    const currentValue = clearDisplay ? \"\" : this.state.displayValue;\n    const displayValue = currentValue + n;\n    this.setState({\n      displayValue,\n      clearDisplay: false\n    });\n\n    if (n !== \".\") {\n      const newValue = parseFloat(displayValue);\n      const values = [...this.state.values];\n      values[this.state.current] = newValue;\n      this.setState({\n        values\n      });\n    }\n  }\n\n  setOperation(operation) {\n    if (this.state.current === 0) {\n      this.setState({\n        operation,\n        current: 1,\n        clearDisplay: true\n      });\n    } else {\n      const equals = operation === \"=\";\n      const values = [...this.state.values];\n      let displayHistory = \"\";\n\n      try {\n        displayHistory = `${values[0]} ${this.state.operation} ${values[1]}`;\n        values[0] = eval(`${values[0]} ${this.state.operation} ${values[1]}`);\n      } catch (e) {\n        values[0] = this.state.values[0];\n      }\n\n      values[1] = 0;\n      this.setState({\n        displayValue: `${values[0]}`,\n        displayHistory,\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: true,\n        values\n      });\n    }\n  }\n\n  setMethod(itemClass, label) {\n    console.log(label);\n    if (label === \"AC\") return this.clear;else if (itemClass === \"operation\" || itemClass === \"col4\") return this.setOperation;else return this.setDigit;\n  }\n\n  render() {\n    const {\n      buttons\n    } = CalculatorConsts();\n\n    const RenderButtons = () => buttons.map((item, index) => {\n      let click = this.setMethod(item.class, item.label);\n      return /*#__PURE__*/_jsxDEV(Button, {\n        label: item.label,\n        style: item.class,\n        onClick: click\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this);\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        value: this.displayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RenderButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/misani/calculator/src/main/Calculator.jsx"],"names":["React","Component","CalculatorConsts","Button","Display","initialState","displayValue","clearDisplay","operation","values","current","Calculator","state","clear","setState","setDigit","n","includes","currentValue","newValue","parseFloat","setOperation","equals","displayHistory","eval","e","setMethod","itemClass","label","console","log","render","buttons","RenderButtons","map","item","index","click","class"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./Calculator.css\";\n\nimport CalculatorConsts from \"../common/consts/calculator.consts\";\nimport Button from \"../components/Button/Button\";\nimport Display from \"../components/Display/Display\";\n\nconst initialState = {\n  displayValue: \"0\",\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0,\n};\nexport default class Calculator extends Component {\n  state = { ...initialState };\n\n  clear() {\n    this.setState({ initialState });\n  }\n\n  setDigit(n) {\n    const clearDisplay =\n      this.state.displayValue === \"0\" || this.state.clearDisplay;\n\n    if (n === \".\" && !clearDisplay && this.state.displayValue.includes(\".\"))\n      return;\n\n    const currentValue = clearDisplay ? \"\" : this.state.displayValue;\n    const displayValue = currentValue + n;\n    this.setState({ displayValue, clearDisplay: false });\n\n    if (n !== \".\") {\n      const newValue = parseFloat(displayValue);\n      const values = [...this.state.values];\n      values[this.state.current] = newValue;\n      this.setState({ values });\n    }\n  }\n\n  setOperation(operation) {\n    if (this.state.current === 0) {\n      this.setState({ operation, current: 1, clearDisplay: true });\n    } else {\n      const equals = operation === \"=\";\n      const values = [...this.state.values];\n      let displayHistory = \"\";\n      try {\n        displayHistory = `${values[0]} ${this.state.operation} ${values[1]}`;\n        values[0] = eval(`${values[0]} ${this.state.operation} ${values[1]}`);\n      } catch (e) {\n        values[0] = this.state.values[0];\n      }\n      values[1] = 0;\n      this.setState({\n        displayValue: `${values[0]}`,\n        displayHistory,\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: true,\n        values,\n      });\n    }\n  }\n\n  setMethod(itemClass, label) {\n    console.log(label)\n    if (label === \"AC\") return this.clear;\n    else if (itemClass === \"operation\" || itemClass === \"col4\")\n      return this.setOperation;\n    else return this.setDigit;\n  }\n  render() {\n    const { buttons } = CalculatorConsts();\n\n    const RenderButtons = () =>\n      buttons.map((item, index) => {\n        let click = this.setMethod(item.class, item.label);\n        return (\n          <Button\n            key={index}\n            label={item.label}\n            style={item.class}\n            onClick={click}\n          />\n        );\n      });\n\n    return (\n      <div className='calculator'>\n        <Display value={this.displayValue} />\n        <RenderButtons />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}