{"ast":null,"code":"var _jsxFileName = \"/home/misani/calculator/src/main/Calculator.jsx\";\nimport React, { Component } from 'react';\nimport { View, StyleSheet, StatusBar, SafeAreaView } from 'react-native';\nimport Button from './src/components/Button';\nimport Display from './src/components/Display';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  displayValue: '0',\n  displayHistory: '',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n};\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = { ...initialState\n    };\n\n    this.addDigit = n => {\n      const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay;\n      if (n === '.' && !clearDisplay && this.state.displayValue.includes('.')) return;\n      const currentValue = clearDisplay ? '' : this.state.displayValue;\n      const displayValue = currentValue + n;\n      this.setState({\n        displayValue,\n        clearDisplay: false\n      });\n\n      if (n !== '.') {\n        const newValue = parseFloat(displayValue);\n        const values = [...this.state.values];\n        values[this.state.current] = newValue;\n        this.setState({\n          values\n        });\n      }\n    };\n\n    this.clearMemory = () => {\n      this.setState({ ...initialState\n      });\n    };\n\n    this.setOperation = operation => {\n      if (this.state.current === 0) {\n        this.setState({\n          operation,\n          current: 1,\n          clearDisplay: true\n        });\n      } else {\n        const equals = operation === '=';\n        const values = [...this.state.values];\n        let displayHistory = '';\n\n        try {\n          displayHistory = `${values[0]} ${this.state.operation} ${values[1]}`;\n          values[0] = eval(`${values[0]} ${this.state.operation} ${values[1]}`);\n        } catch (e) {\n          values[0] = this.state.values[0];\n        }\n\n        values[1] = 0;\n        this.setState({\n          displayValue: `${values[0]}`,\n          displayHistory,\n          operation: equals ? null : operation,\n          current: equals ? 0 : 1,\n          clearDisplay: true,\n          values\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      displayValue,\n      displayHistory\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(SafeAreaView, {\n      style: styles.container,\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n          backgroundColor: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Display, {\n          value: displayValue,\n          history: displayHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          style: styles.buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            label: \"C\",\n            operation: true,\n            double: true,\n            onClick: this.clearMemory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"\\xF7\",\n            operation: true,\n            onClick: () => this.setOperation('/')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"x\",\n            operation: true,\n            onClick: () => this.setOperation('*')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"7\",\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"8\",\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"9\",\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"-\",\n            operation: true,\n            onClick: this.setOperation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"4\",\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"5\",\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"6\",\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"+\",\n            operation: true,\n            onClick: this.setOperation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"1\",\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"2\",\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"3\",\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"0\",\n            double: true,\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \".\",\n            onClick: this.addDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"=\",\n            buttonDoubleHeight: true,\n            equals: true,\n            onClick: this.setOperation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  buttons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});","map":{"version":3,"sources":["/home/misani/calculator/src/main/Calculator.jsx"],"names":["React","Component","View","StyleSheet","StatusBar","SafeAreaView","Button","Display","initialState","displayValue","displayHistory","clearDisplay","operation","values","current","App","state","addDigit","n","includes","currentValue","setState","newValue","parseFloat","clearMemory","setOperation","equals","eval","e","render","styles","container","buttons","create","flex","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    View,\n    StyleSheet,\n    StatusBar,\n    SafeAreaView\n} from 'react-native';\n\nimport Button from './src/components/Button'\nimport Display from './src/components/Display'\n\nconst initialState = {\n    displayValue: '0',\n    displayHistory: '',\n    clearDisplay: false,\n    operation: null,\n    values: [0, 0],\n    current: 0,\n}\n\nexport default class App extends Component {\n\n    state = { ...initialState }\n\n    addDigit = n => {\n        const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay\n\n        if (n === '.' && !clearDisplay && this.state.displayValue.includes('.')) return\n\n        const currentValue = clearDisplay ? '' : this.state.displayValue\n        const displayValue = currentValue + n\n        this.setState({ displayValue, clearDisplay: false })\n\n        if (n !== '.') {\n            const newValue = parseFloat(displayValue)\n            const values = [...this.state.values]\n            values[this.state.current] = newValue\n            this.setState({ values })\n        }\n    }\n\n    clearMemory = () => {\n        this.setState({ ...initialState })\n    }\n\n    setOperation = operation => {\n        if (this.state.current === 0) {\n            this.setState({ operation, current: 1, clearDisplay: true })\n        } else {\n            const equals = operation === '='\n            const values = [...this.state.values]\n            let displayHistory = ''\n            try {\n                displayHistory = `${values[0]} ${this.state.operation} ${values[1]}`\n                values[0] =\n                    eval(`${values[0]} ${this.state.operation} ${values[1]}`)\n            } catch (e) {\n                values[0] = this.state.values[0]\n            }\n            values[1] = 0\n            this.setState({\n                displayValue: `${values[0]}`,\n                displayHistory,\n                operation: equals ? null : operation,\n                current: equals ? 0 : 1,\n                clearDisplay: true,\n                values,\n            })\n        }\n    }\n\n    render() {\n        const { displayValue, displayHistory } = this.state\n        return (\n            <SafeAreaView style={styles.container}>\n                <View style={styles.container}>\n                    <StatusBar backgroundColor=\"#fff\" />\n                    <Display value={displayValue} history={displayHistory} />\n                    <View style={styles.buttons}>\n                        <Button label=\"C\" operation double onClick={this.clearMemory} />\n                        <Button label=\"÷\" operation onClick={() => this.setOperation('/')} />\n                        <Button label=\"x\" operation onClick={() => this.setOperation('*')} />\n                        <Button label=\"7\" onClick={this.addDigit} />\n                        <Button label=\"8\" onClick={this.addDigit} />\n                        <Button label=\"9\" onClick={this.addDigit} />\n                        <Button label=\"-\" operation onClick={this.setOperation} />\n                        <Button label=\"4\" onClick={this.addDigit} />\n                        <Button label=\"5\" onClick={this.addDigit} />\n                        <Button label=\"6\" onClick={this.addDigit} />\n                        <Button label=\"+\" operation onClick={this.setOperation} />\n                        <Button label=\"1\" onClick={this.addDigit} />\n                        <Button label=\"2\" onClick={this.addDigit} />\n                        <Button label=\"3\" onClick={this.addDigit} />\n                        <Button label=\"0\" double onClick={this.addDigit} />\n                        <Button label=\".\" onClick={this.addDigit} />\n                        <Button label=\"=\" buttonDoubleHeight equals onClick={this.setOperation} />\n                    </View>\n                </View>\n            </SafeAreaView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    buttons: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n    }\n})"]},"metadata":{},"sourceType":"module"}